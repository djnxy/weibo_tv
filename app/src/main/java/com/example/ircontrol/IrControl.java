package com.example.ircontrol;

import android.content.Context;
import android.hardware.ConsumerIrManager;
import android.os.Build;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;

/**
 * Created by xinyu10 on 2015/7/27.
 */
public class IrControl {

    static private ConsumerIrManager irdaService = null;

    static private Map<String,int[][]> irCode = null;

    static final int freq = 38028;

    private void IrControl(){
    }

    static private void initIrCode(){
        irCode = new Hashtable<String,int[][]>();
        int[][] code1 = {{109,26,23,10,20,12,20,30,20,30,53,31,18,15,18,16,17,17,16,16,17,16,16,16,16,16,17,16,17,16,33,33,16,17,16,16,16,16,33,34,33,33,16,16,33,16,16,33,16,16,16,16,16,16,16,16,16,17,16,16,16,16,33,2659,102,33,16,16,17,16,16,33,16,33,50,34,16,17,16,16,16,16,16,16,16,16,16,16,17,16,16,16,17,16,33,33,16,17,16,16,16,16,33,33,33,33,16,17,33,16,16,33,16,16,16,16,16,16,16,16,17,16,17,16,16,17,33},{2879,688,621,289,551,335,542,795,531,803,1395,832,492,402,480,421,450,449,443,439,448,442,442,445,444,446,449,438,448,444,885,894,440,449,443,445,444,446,883,896,887,890,446,443,889,445,446,889,446,443,445,445,446,442,447,442,440,449,446,443,447,442,894,69935,2690,886,444,446,449,440,447,889,447,886,1328,895,441,450,442,447,442,445,445,445,443,446,445,443,452,438,447,441,451,437,893,887,439,451,441,447,444,446,890,887,887,892,442,448,887,447,444,890,446,444,446,442,447,442,446,443,451,436,448,444,443,451,883}};
        int[][] code2 = {{108,26,23,11,20,12,20,30,20,30,53,31,18,15,17,16,17,16,17,16,16,17,16,16,16,16,17,16,16,16,33,34,16,17,16,17,16,17,33,33,33,34,16,17,33,17,16,33,16,16,16,16,16,16,16,16,17,16,16,16,33,33,16,2642,102,33,16,16,16,16,16,33,16,33,50,33,16,17,16,16,16,17,16,16,16,17,16,16,17,16,17,16,17,17,33,33,16,17,16,16,17,16,33,33,33,33,17,16,34,16,17,33,16,16,16,17,16,16,16,16,16,16,17,16,33,33,17,2642,102,33,16,16,16,17,16,33,17,33,50,33,17,16,16,16,16,16,17,16,17,16,16,16,17,16,17,16,16,16,33,33,16,16,17,16,17,16,33,34,33,33,16,17,33,16,16,33,16,16,16,16,17,16,16,16,17,16,17,16,33,33,16},{2862,690,626,295,543,333,541,796,534,801,1401,824,488,412,472,425,457,435,452,438,441,448,446,442,445,444,448,441,444,445,879,901,432,457,436,454,437,452,883,894,884,896,439,449,886,454,436,891,446,444,445,444,444,445,447,441,453,438,442,447,893,886,440,69502,2689,888,444,443,447,444,445,889,446,887,1330,894,441,449,445,444,437,451,445,445,441,448,445,444,448,441,449,439,449,456,876,889,440,448,446,443,449,440,894,884,892,888,449,438,895,440,449,885,447,443,444,448,445,440,445,445,444,445,449,438,892,888,453,69490,2686,890,446,445,440,448,441,892,450,885,1336,886,448,442,445,445,445,444,448,442,449,443,446,439,450,438,449,441,443,446,891,889,446,442,449,440,451,438,883,896,886,893,441,448,889,445,447,886,444,446,445,444,448,440,447,443,448,441,453,435,891,888,445}};
        int[][] code3 = {{109,26,23,10,21,12,20,30,20,30,52,32,18,15,17,16,17,16,17,16,16,16,16,16,16,17,16,16,16,17,33,34,17,16,16,17,16,16,33,34,33,33,16,17,33,16,16,33,16,17,16,17,16,17,16,16,16,16,16,16,33,16,17,2659,102,33,16,16,16,16,17,33,16,33,50,33,16,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,33,33,16,17,16,16,16,16,34,33,33,33,17,16,33,16,16,33,17,16,16,16,17,16,16,16,16,16,16,16,34,16,16},{2869,687,622,283,555,337,540,796,533,802,1390,842,481,412,471,429,451,437,449,442,442,447,442,440,447,450,441,446,441,448,884,895,451,438,442,448,442,447,880,898,889,891,437,451,887,447,439,894,434,456,437,453,440,449,443,445,445,445,441,447,894,440,450,69934,2690,894,441,443,445,444,448,886,446,887,1331,894,445,442,450,438,448,443,450,437,451,436,454,437,453,438,449,441,448,440,888,890,443,448,442,447,445,442,900,881,889,888,449,441,889,444,447,887,449,441,445,445,448,439,445,447,444,441,444,444,896,441,445}};
        int[][] code4 = {{109,26,23,11,20,12,20,30,20,30,52,31,18,15,17,16,17,16,17,16,17,16,16,16,16,16,17,16,16,16,33,34,16,16,17,16,16,16,33,33,33,33,16,16,33,16,16,33,16,17,17,16,17,16,17,16,16,16,34,33,16,16,17,2642,102,33,16,17,16,17,16,33,16,33,50,33,16,16,17,16,17,16,16,17,16,16,16,16,17,16,16,16,16,16,33,33,16,16,17,16,17,16,34,33,33,33,16,16,33,16,16,33,17,16,16,17,16,16,16,16,17,16,33,33,16,17,17},{2867,690,621,295,541,340,540,797,530,804,1387,838,489,413,468,423,456,437,451,442,451,441,438,444,442,446,450,443,445,444,885,895,442,446,448,443,439,447,886,894,886,893,445,444,888,447,440,894,441,448,451,438,451,436,450,442,446,440,895,886,447,441,449,69493,2690,889,440,453,437,448,441,894,440,894,1334,886,447,445,451,438,451,438,439,449,443,446,447,439,450,444,445,443,444,444,889,891,446,443,451,437,448,442,895,888,883,892,445,442,891,443,446,884,450,445,442,448,446,442,444,446,449,440,889,890,441,448,448}};
        int[][] code6 = {{109,26,23,10,21,12,20,30,20,30,53,31,18,15,17,16,17,16,16,16,16,16,16,16,16,16,16,16,16,16,33,33,16,17,16,17,16,16,33,33,33,33,16,17,33,16,16,33,17,16,16,16,16,17,16,16,17,16,33,16,17,33,17,2642,102,34,16,17,16,17,16,33,16,33,50,33,16,16,16,16,16,16,16,16,16,16,16,16,17,16,17,16,16, 16, 33, 33,16,17,17,16,16,16,33,33,34,33,16,16,33,17,16,33,17,16,16,16,16,16,16,16,16,16,33,17,16,33,16},{2870,688,621,281,557,338,540,795,532,802,1395,834,488,414,468,426,450,440,445,445,445,444,445,444,445,442,446,446,442,445,886,894,439,450,439,450,442,447,886,893,884,894,440,449,885,447,444,892,448,440,446,444,444,449,442,442,450,440,890,442,451,882,451,69488,2684,895,438,451,441,448,445,890,442,889,1332,893,442,447,442,447,447,442,445,444,447,442,447,441,453,437,451,438,446,442,894,887,438,450,452,437,443,447,890,886,895,885,443,447,890,450,439,889,448,440,443,447,446,443,442,446,443,447,891,448,440,888,446}};
        int[][] codeok = {{108,26,23,11,20,12,20,30,20,30,52,31,18,15,17,16,17,16,16,16,17,16,17,16,16,17,16,16,16,16,33,33,16,16,16,17,16,16,33,34,33,34,16,16,33,16,16,33,16,16,33,34,33,16,16,16,16,33,16,16,16,2642,102,33,16,16,16,16,16,33,16,33,50,33,16,16,16,16,16,16,17,17,16,16,17,16,16,16,17,16,17,16,33,34,16,17,16,17,16,17,33,33,33,33,16,16,34,16,16,34,16,16,33,33,33,16,16,16,16,33,16,16,17},{2865,688,628,292,544,334,542,795,530,804,1390,836,492,413,466,423,457,437,446,442,451,438,448,442,439,450,447,443,442,446,888,890,444,446,440,449,442,447,883,901,879,895,440,447,890,444,447,888,442,447,884,895,889,445,443,445,446,888,442,447,446,69492,2686,891,441,447,446,441,444,892,444,891,1337,884,445,446,444,444,443,446,450,455,434,439,451,439,443,446,449,440,451,438,883,896,435,453,439,464,427,449,888,891,888,889,447,443,899,435,445,900,432,445,891,889,888,444,445,445,447,883,447,446,449}};
        irCode.put("1",code1);
        irCode.put("2",code2);
        irCode.put("3",code3);
        irCode.put("4",code4);
        irCode.put("6",code6);
        irCode.put("ok",codeok);
    }

    static private void setIrdaService(Context context){
        irdaService = (ConsumerIrManager)context.getSystemService(Context.CONSUMER_IR_SERVICE);
    }

    public static void setInstance(Context context){
        if (irdaService == null) {
            setIrdaService(context);
            initIrCode();
        }
    }

    static public boolean hasIr(){
        if (!irdaService.hasIrEmitter()) {
            return false;
        }
        return true;
    }

    static public void sendSerieCode(String[] codes){
        for(String num :codes){
            irSend(num);
        }
        irSend("ok");
    }

    static public void irSend(String code) {
        if (Build.VERSION.SDK_INT >= 19) {
            int lastIdx = Build.VERSION.RELEASE.lastIndexOf(".");
            int VERSION_MR = Integer.valueOf(Build.VERSION.RELEASE.substring(lastIdx + 1));
            if (VERSION_MR < 3) {
                // Before version of Android 4.4.2
                //irdaService.transmit(freq, count_data);
                irdaService.transmit(freq, irCode.get(code)[0]);
            } else {
                // Later version of Android 4.4.3
                //irdaService.transmit(freq, duration_data);
                irdaService.transmit(freq, irCode.get(code)[1]);
            }
            sleep(30);
        }
    }

    static private void sleep(int time){
        try {
            Thread.sleep(time);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    protected int[] count2duration(int[] countPattern) {
        List<Integer> list = new ArrayList<Integer>();
        for(int intValue : countPattern) {
            list.add(intValue);
        }
        int frequency = list.get(0);
        int pulses = 1000000/frequency;
        int count;
        int duration;

        list.remove(0);

        for (int i = 0; i < list.size(); i++) {
            count = list.get(i);
            duration = count * pulses;
            list.set(i, duration);
        }

        String durationPattern = "";
        for (int s : list) {
            durationPattern += s + ",";
        }
        int[] res=new int[list.size()];

        for (int i = 0; i < list.size(); i++) {
            res[i] = list.get(i);
        }
        return res;
    }
}
